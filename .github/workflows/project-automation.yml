name: Project Board Automation
on:
  issues:
    types: [opened, reopened, closed]
  pull_request:
    types: [opened, reopened, closed]

jobs:
  project-automation:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      repository-projects: write
      contents: read
      # Add project permission
      project: write

    steps:
      - name: Move Issue or PR to Project Board
        uses: actions/github-script@v6
        with:
          # Use a fine-grained PAT instead of GITHUB_TOKEN
          github-token: ${{ secrets.PROJECT_TOKEN }}
          script: |
            const projectId = "PVT_kwHOAdW7184Ayg4u";
            const statusFieldId = "PVTSSF_lAHOAdW7184AxuCEzgnyZJw";
            
            const statusIds = {
              "todo": "47fc9ee4",
              "in_progress": "98236657", 
              "done": "0c6d2832"
            };
            
            let itemId;
            let status;
            
            if (context.payload.issue) {
              itemId = context.payload.issue.node_id;
              status = context.payload.action === 'closed' ? 'done' : 'todo';
            } else if (context.payload.pull_request) {
              itemId = context.payload.pull_request.node_id;
              status = context.payload.action === 'closed' ? 'done' : 'in_progress';
            }
            
            try {
              // Add item to project
              const addResponse = await github.graphql(`
                mutation($projectId: ID!, $contentId: ID!) {
                  addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
                    item {
                      id
                    }
                  }
                }
              `, {
                projectId: projectId,
                contentId: itemId
              });
              
              console.log("Item added to project:", addResponse);
              
              // Update status
              await github.graphql(`
                mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                  updateProjectV2ItemFieldValue(
                    input: {
                      projectId: $projectId
                      itemId: $itemId
                      fieldId: $fieldId
                      value: { singleSelectOptionId: $optionId }
                    }
                  ) { projectV2Item { id } }
                }
              `, {
                projectId: projectId,
                itemId: itemId,
                fieldId: statusFieldId,
                optionId: statusIds[status]
              });
            } catch (error) {
              console.error("Error processing project automation:", error);
            }
